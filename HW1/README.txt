多核程序设计与实践_作业1

1. (coding) 利用CUDA实现矩阵相加
– 给定两个大小相等的矩阵𝐴, 𝐵 
– 计算矩阵𝐶，其每一个元素均为𝐴, 𝐵中相应元素之和
	• 𝐶[𝑖,𝑗] = 𝐴[𝑖,𝑗] + 𝐵[𝑖,𝑗]
note :
– 矩阵的读取、写入代码已提供，只需实现矩阵相加部分代码
– 提供的测试数据中，input1.bin为8*8维的矩阵，input2.bin为2048*2048维的矩阵
   可通过如下的脚本进行调用（默认调用input1.bin）：
	./main input1.bin output1.bin
	./main input2.bin output2.bin
   最终应生成output1.bin，output2.bin 两个文件。
– 最终提交的代码中要求对于长宽都大于0，总的大小不超过显存大小的矩阵都能正常运行。

2. (writing) 回答以下问题
– 2.1 介绍程序整体逻辑，包含的函数，每个函数完成的内容（10分）
– 2.2 讨论矩阵大小及线程组织对性能的影响，可考虑但不限于以下因素（60分）
	• 一维 vs 二维
	• 线程块大小对性能的影响
	• 每个线程计算的元素数量对性能的影响
	• 以上配置在处理不同大小的矩阵时，性能可能的差异
– 2.3 使用OpenMP实现并与CUDA版本进行对比（30分） 
	• 可根据矩阵大小讨论

submission:
作业提交内容：需提交一个.zip文件，需包括main.cu，output1.bin， output2.bin 以及实验报告pdf。
zip文件命名格式：姓名_学号_homework1; 如需提交不同版本，则命名格式：姓名_学号_homework1_v2等。
作业提交方式: https://www.scholat.com/course/muticore2022
作业提交截止时间： 5月15日晚11时59分
